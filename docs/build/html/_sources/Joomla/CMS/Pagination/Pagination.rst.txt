-----------------------------------
Joomla\\CMS\\Pagination\\Pagination
-----------------------------------

.. php:namespace: Joomla\\CMS\\Pagination

.. php:class:: Pagination

    Pagination Class. Provides a common interface for content pagination for the Joomla! CMS.

    .. php:attr:: limitstart

        :type: integer

    .. php:attr:: limit

        :type: integer

    .. php:attr:: total

        :type: integer

    .. php:attr:: prefix

        :type: integer

    .. php:attr:: pagesStart

        :type: integer

    .. php:attr:: pagesStop

        :type: integer

    .. php:attr:: pagesCurrent

        :type: integer

    .. php:attr:: pagesTotal

        :type: integer

    .. php:attr:: hideEmptyLimitstart

        :type: boolean

    .. php:attr:: viewall

        :type: boolean

        :scope: protected

    .. php:attr:: additionalUrlParams

        :type: array

        :scope: protected

        Additional URL parameters to be added to the pagination URLs generated by
        the class.  These
        may be useful for filters and extra values when dealing with lists and GET
        requests.

    .. php:attr:: app

        :type: CMSApplication

        :scope: protected

    .. php:attr:: data

        :type: object

        :scope: protected

        Pagination data object

    .. php:method:: __construct($total, $limitstart, $limit, $prefix = '', CMSApplication $app = null)

        Constructor.

        :param $total:
        :param $limitstart:
        :param $limit:
        :param $prefix:
        :type $app: CMSApplication
        :param $app:

    .. php:method:: setAdditionalUrlParam($key, $value)

        Method to set an additional URL parameter to be added to all pagination
        class generated
        links.

        :param $key:
        :param $value:
        :returns: mixed The old value for the parameter.

    .. php:method:: getAdditionalUrlParam($key)

        Method to get an additional URL parameter (if it exists) to be added to
        all pagination class generated links.

        :param $key:
        :returns: mixed The value if it exists or null if it does not.

    .. php:method:: getRowOffset($index)

        Return the rationalised offset for a row with a given index.

        :param $index:
        :returns: integer Rationalised offset for a row with a given index.

    .. php:method:: getData()

        Return the pagination data object, only creating it if it doesn't already
        exist.

        :returns: \stdClass Pagination data object.

    .. php:method:: getPagesCounter()

        Create and return the pagination pages counter string, ie. Page 2 of 4.

        :returns: string Pagination pages counter string.

    .. php:method:: getResultsCounter()

        Create and return the pagination result set counter string, e.g. Results
        1-10 of 42

        :returns: string Pagination result set counter string.

    .. php:method:: getPagesLinks()

        Create and return the pagination page list string, ie. Previous, Next, 1 2
        3 ... x.

        :returns: string Pagination page list string.

    .. php:method:: getPaginationLinks($layoutId = 'joomla.pagination.links', $options = array())

        Get the pagination links

        :param $layoutId:
        :param $options:
        :returns: string Pagination links.

    .. php:method:: getPaginationPages()

        Create and return the pagination pages list, ie. Previous, Next, 1 2 3 ...
        x.

        :returns: array Pagination pages list.

    .. php:method:: getListFooter()

        Return the pagination footer.

        :returns: string Pagination footer.

    .. php:method:: getLimitBox()

        Creates a dropdown box for selecting how many records to show per page.

        :returns: string The HTML for the limit # input box.

    .. php:method:: orderUpIcon($i, $condition = true, $task = 'orderup', $alt = 'JLIB_HTML_MOVE_UP', $enabled = true, $checkbox = 'cb')

        Return the icon to move an item UP.

        :param $i:
        :param $condition:
        :param $task:
        :param $alt:
        :param $enabled:
        :param $checkbox:
        :returns: string Either the icon to move an item up or a space.

    .. php:method:: orderDownIcon($i, $n, $condition = true, $task = 'orderdown', $alt = 'JLIB_HTML_MOVE_DOWN', $enabled = true, $checkbox = 'cb')

        Return the icon to move an item DOWN.

        :param $i:
        :param $n:
        :param $condition:
        :param $task:
        :param $alt:
        :param $enabled:
        :param $checkbox:
        :returns: string Either the icon to move an item down or a space.

    .. php:method:: _list_footer($list)

        Create the HTML for a list footer

        :param $list:
        :returns: string HTML for a list footer

    .. php:method:: _list_render($list)

        Create the html for a list footer

        :param $list:
        :returns: string HTML for a list start, previous, next,end

    .. php:method:: _item_active(PaginationObject $item)

        Method to create an active pagination link to the item

        :type $item: PaginationObject
        :param $item:
        :returns: string HTML link

    .. php:method:: _item_inactive(PaginationObject $item)

        Method to create an inactive pagination string

        :type $item: PaginationObject
        :param $item:
        :returns: string

    .. php:method:: _buildDataObject()

        Create and return the pagination data object.

        :returns: \stdClass Pagination data object.

    .. php:method:: set($property, $value = null)

        Modifies a property of the object, creating it if it does not already
        exist.

        :param $property:
        :param $value:
        :returns: void

    .. php:method:: get($property, $default = null)

        Returns a property of the object or the default value if the property is
        not set.

        :param $property:
        :param $default:
        :returns: mixed The value of the property.
